//
// This file was generated by the Retargetable Decompiler
// Website: https://retdec.com
// Copyright (c) 2018 Retargetable Decompiler <info@retdec.com>
//

#include <stdbool.h>
#include <stdint.h>

// ------------------- Function Prototypes --------------------

int32_t _calc_exp_needed(int32_t a1, int32_t a2);
int32_t sub_476D84(int32_t a1, int32_t a2, int32_t a3, int32_t a4);
int32_t sub_476DAA(void);

// --------------------- Global Variables ---------------------

int32_t dword_47D540 = 1; // 0x47D540
int32_t dword_47D544 = 1; // 0x47D544

// ------------------------ Functions -------------------------

// Address range: 0x41671f - 0x416818
int32_t _calc_exp_needed(int32_t a1, int32_t a2) {
    int32_t v1 = 1000 * a2 + 0x186a0; // 0x41672d
    int32_t result = (0x100000000 * (int64_t)(v1 >> 31) | (int64_t)v1) / 100; // ebx
    sub_476D84(0, 0, 0, 0);
    if (a1 > 0) {
        int32_t v2 = 0; // 0x416801
        while (true) {
            // 0x41674c
            uint32_t v3; // 0x416796
            int32_t v4; // 0x4167ee
            int64_t v5; // 0x4167f2
            int32_t v6; // 0x416798
            if (v2 < 26) {
                int32_t v7 = 8 * v2; // 0x416751
                v5 = (int64_t)*(int32_t *)(v7 + (int32_t)&dword_47D544);
                v4 = *(int32_t *)(v7 + (int32_t)&dword_47D540);
                // branch -> 0x416796
            } else {
                // 0x416764
                if (v2 > 60) {
                    // 0x416769
                    v5 = 100;
                    v4 = 105;
                    // branch -> 0x416796
                } else {
                    // 0x416777
                    if (v2 > 52) {
                        // 0x41677c
                        v5 = 100;
                        v4 = 110;
                        // branch -> 0x416796
                    } else {
                        // 0x41678a
                        v5 = 100;
                        v4 = 115;
                        // branch -> 0x416796
                    }
                    // 0x416796
                    v3 = result;
                    v6 = v3 * v4;
                    int32_t v8;
                    if (v3 <= v6) {
                      lab_0x41679f_2:
                        // 0x41679f
                        if (v3 == v6 / v4) {
                            // 0x4167a9
                            v8 = (int64_t)v6 / v5;
                            // branch -> 0x416801
                          lab_0x416801:
                            // 0x416801
                            result = v8;
                            int32_t v9 = v2 + 1; // 0x416801
                            if (v9 == a1) {
                                // break -> 0x41680b
                                break;
                            }
                            v2 = v9;
                            // continue -> 0x41674c
                            continue;
                        }
                    }
                  lab_0x4167b4_2:;
                    uint32_t v10 = v3 / 100;
                    uint32_t v11 = v10 * v4; // 0x4167c3
                    int32_t v12;
                    if (v10 <= v11) {
                        // 0x4167ca
                        if (v10 == v11 / v4) {
                            // 0x4167d4
                            v12 = (int64_t)v11 / v5;
                            // branch -> 0x4167fc
                          lab_0x4167fc:
                            // 0x4167fc
                            v8 = 100 * v12;
                            // branch -> 0x416801
                            goto lab_0x416801;
                        }
                    }
                    int32_t v13 = ((int64_t)(v3 / 0x2710) * (int64_t)v4 & 0xffffffff) / v5; // 0x4167f2
                    v12 = 100 * v13;
                    // branch -> 0x4167fc
                    goto lab_0x4167fc;
                }
                // 0x416796
                v3 = result;
                v6 = v3 * v4;
                if (v3 > v6) {
                    goto lab_0x4167b4_2;
                }
                goto lab_0x41679f_2;
            }
            // 0x416796
            v3 = result;
            v6 = v3 * v4;
            if (v3 > v6) {
                goto lab_0x4167b4_2;
            }
            goto lab_0x41679f_2;
        }
        // 0x41680b
        // branch -> 0x41680b
    }
    // 0x41680b
    sub_476DAA();
    return result;
}

// --------------------- Meta-Information ---------------------

// Detected compiler/packer: borland delphi (3.0)
// Detected functions: 1
// Decompilation date: 2018-11-02 20:13:04